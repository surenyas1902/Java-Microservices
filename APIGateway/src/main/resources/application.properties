
server.port=80
spring.application.name=apigateway
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka

# spring.cloud.gateway.discovery.locator.enabled=true -- Automatically map with the Discovery Clients and expose the urls for api's
# spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true - Change the application name to lower case for api call

#Id for unique routes
spring.cloud.gateway.routes[0].id=users-status-check
# lb - Load balancer || users-ws - application name for users microservices
spring.cloud.gateway.routes[0].uri=lb://users-ws
# If the below predicates matched, then it will automatically route to Users Microservices based on above uri
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie

#Id for unique routes
spring.cloud.gateway.routes[1].id=users-status-check2
# lb - Load balancer || users-ws - application name for users microservices
spring.cloud.gateway.routes[1].uri=lb://users-ws
# If the below predicates matched, then it will automatically route to Users Microservices based on above uri and below Rewrite Path
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-status-check
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-status-check,/users/status/check

#Id for unique routes
spring.cloud.gateway.routes[2].id=users-status-check3
# lb - Load balancer || users-ws - application name for users microservices
spring.cloud.gateway.routes[2].uri=lb://users-ws
# If the below predicates matched, then it will automatically route to Users Microservices based on above uri and below Rewrite Path
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-ms/users/status/check
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-ms/(?<segment>.*), /$\{segment}

#Id for unique routes
spring.cloud.gateway.routes[3].id=users-status-check4
# lb - Load balancer || users-ws - application name for users microservices
spring.cloud.gateway.routes[3].uri=lb://users-ws
# If the below predicates matched, then it will automatically route to Users Microservices based on above uri and below Rewrite Path
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-ms/users
spring.cloud.gateway.routes[3].predicates[1]=Method=GET,POST
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/users-ms/(?<segment>.*), /$\{segment}

#Id for unique routes
spring.cloud.gateway.routes[4].id=user-login
# lb - Load balancer || users-ws - application name for users microservices
spring.cloud.gateway.routes[4].uri=lb://users-ws
# If the below predicates matched, then it will automatically route to Users Microservices based on above uri and below Rewrite Path
spring.cloud.gateway.routes[4].predicates[0]=Path=/users-ms/users/login
spring.cloud.gateway.routes[4].predicates[1]=Method=POST
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/users-ms/(?<segment>.*), /$\{segment}